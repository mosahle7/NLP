{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "26fc29b4",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:24.588917Z",
     "iopub.status.busy": "2025-05-11T08:35:24.588591Z",
     "iopub.status.idle": "2025-05-11T08:35:26.856585Z",
     "shell.execute_reply": "2025-05-11T08:35:26.855407Z"
    },
    "papermill": {
     "duration": 2.275832,
     "end_time": "2025-05-11T08:35:26.858387",
     "exception": false,
     "start_time": "2025-05-11T08:35:24.582555",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/shakspare-text/shakespeare.txt\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6e66f059",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.867111Z",
     "iopub.status.busy": "2025-05-11T08:35:26.866633Z",
     "iopub.status.idle": "2025-05-11T08:35:26.871734Z",
     "shell.execute_reply": "2025-05-11T08:35:26.870768Z"
    },
    "papermill": {
     "duration": 0.011148,
     "end_time": "2025-05-11T08:35:26.873369",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.862221",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import re\n",
    "from collections import Counter"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "759da348",
   "metadata": {
    "papermill": {
     "duration": 0.003105,
     "end_time": "2025-05-11T08:35:26.880086",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.876981",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Preprocessing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4d083787",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.888428Z",
     "iopub.status.busy": "2025-05-11T08:35:26.887648Z",
     "iopub.status.idle": "2025-05-11T08:35:26.892707Z",
     "shell.execute_reply": "2025-05-11T08:35:26.891682Z"
    },
    "papermill": {
     "duration": 0.011099,
     "end_time": "2025-05-11T08:35:26.894442",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.883343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "file = \"/kaggle/input/shakspare-text/shakespeare.txt\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0fdf5a82",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.903609Z",
     "iopub.status.busy": "2025-05-11T08:35:26.903322Z",
     "iopub.status.idle": "2025-05-11T08:35:26.908766Z",
     "shell.execute_reply": "2025-05-11T08:35:26.907534Z"
    },
    "papermill": {
     "duration": 0.011335,
     "end_time": "2025-05-11T08:35:26.910506",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.899171",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def process_data(file):\n",
    "    words = []\n",
    "    \n",
    "    with open(file, 'r') as f:\n",
    "        content = f.read()\n",
    "    content = content.lower()\n",
    "    words = re.findall(r'\\w+', content)\n",
    "    return words"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "90eeed2d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.918680Z",
     "iopub.status.busy": "2025-05-11T08:35:26.918367Z",
     "iopub.status.idle": "2025-05-11T08:35:26.948373Z",
     "shell.execute_reply": "2025-05-11T08:35:26.947136Z"
    },
    "papermill": {
     "duration": 0.035937,
     "end_time": "2025-05-11T08:35:26.950188",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.914251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "words = process_data(file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "86d4c41a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.958217Z",
     "iopub.status.busy": "2025-05-11T08:35:26.957893Z",
     "iopub.status.idle": "2025-05-11T08:35:26.968306Z",
     "shell.execute_reply": "2025-05-11T08:35:26.967411Z"
    },
    "papermill": {
     "duration": 0.016299,
     "end_time": "2025-05-11T08:35:26.970002",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.953703",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6116"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "vocab = set(words)\n",
    "len(vocab)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "38ed6dda",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.978347Z",
     "iopub.status.busy": "2025-05-11T08:35:26.977994Z",
     "iopub.status.idle": "2025-05-11T08:35:26.983124Z",
     "shell.execute_reply": "2025-05-11T08:35:26.981983Z"
    },
    "papermill": {
     "duration": 0.011194,
     "end_time": "2025-05-11T08:35:26.984794",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.973600",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def get_count(words):\n",
    "    return Counter(words)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "8ce62e3d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:26.994638Z",
     "iopub.status.busy": "2025-05-11T08:35:26.994230Z",
     "iopub.status.idle": "2025-05-11T08:35:27.009231Z",
     "shell.execute_reply": "2025-05-11T08:35:27.008120Z"
    },
    "papermill": {
     "duration": 0.022039,
     "end_time": "2025-05-11T08:35:27.011388",
     "exception": false,
     "start_time": "2025-05-11T08:35:26.989349",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "240"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "counts = get_count(words)\n",
    "counts['thee']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "79820d89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:27.020777Z",
     "iopub.status.busy": "2025-05-11T08:35:27.019940Z",
     "iopub.status.idle": "2025-05-11T08:35:27.025494Z",
     "shell.execute_reply": "2025-05-11T08:35:27.024358Z"
    },
    "papermill": {
     "duration": 0.011852,
     "end_time": "2025-05-11T08:35:27.027218",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.015366",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def get_probs(counts):\n",
    "    total = sum(counts.values())\n",
    "    return {k: v/total for k,v in counts.items()}\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0225d456",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:27.035809Z",
     "iopub.status.busy": "2025-05-11T08:35:27.035490Z",
     "iopub.status.idle": "2025-05-11T08:35:27.043293Z",
     "shell.execute_reply": "2025-05-11T08:35:27.042367Z"
    },
    "papermill": {
     "duration": 0.01409,
     "end_time": "2025-05-11T08:35:27.044942",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.030852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.004476442720185026"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "probs = get_probs(counts)\n",
    "probs['thee']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "357a72f9",
   "metadata": {
    "papermill": {
     "duration": 0.003713,
     "end_time": "2025-05-11T08:35:27.052378",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.048665",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**String Manipulation**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "eda481ec",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:27.061419Z",
     "iopub.status.busy": "2025-05-11T08:35:27.061126Z",
     "iopub.status.idle": "2025-05-11T08:35:27.067245Z",
     "shell.execute_reply": "2025-05-11T08:35:27.065996Z"
    },
    "papermill": {
     "duration": 0.012663,
     "end_time": "2025-05-11T08:35:27.068852",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.056189",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def delete(word):\n",
    "    l = len(word)\n",
    "    splits=[]\n",
    "    splits = [[word[:i], word[i:]] for i in range(l)]\n",
    "    dels=[]\n",
    "    dels = [l+r[1:] for l,r in splits]\n",
    "    return dels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "d7cc5503",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:27.077914Z",
     "iopub.status.busy": "2025-05-11T08:35:27.077522Z",
     "iopub.status.idle": "2025-05-11T08:35:27.084860Z",
     "shell.execute_reply": "2025-05-11T08:35:27.083850Z"
    },
    "papermill": {
     "duration": 0.013989,
     "end_time": "2025-05-11T08:35:27.086529",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.072540",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ahle', 'shle', 'sale', 'sahe', 'sahl']"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "word = 'sahle'\n",
    "dels = delete(word)\n",
    "dels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "82688342",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:27.095125Z",
     "iopub.status.busy": "2025-05-11T08:35:27.094771Z",
     "iopub.status.idle": "2025-05-11T08:35:27.100715Z",
     "shell.execute_reply": "2025-05-11T08:35:27.099746Z"
    },
    "papermill": {
     "duration": 0.011892,
     "end_time": "2025-05-11T08:35:27.102221",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.090329",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def switch(word):\n",
    "    l = len(word)\n",
    "    swi = []\n",
    "    for i in range(l-1):\n",
    "        li = list(word)\n",
    "        li[i],li[i+1] = li[i+1], li[i]\n",
    "        swi.append(''.join(li))\n",
    "    return swi        \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "04ea39c4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-11T08:35:27.110855Z",
     "iopub.status.busy": "2025-05-11T08:35:27.110520Z",
     "iopub.status.idle": "2025-05-11T08:35:27.117312Z",
     "shell.execute_reply": "2025-05-11T08:35:27.115912Z"
    },
    "papermill": {
     "duration": 0.013245,
     "end_time": "2025-05-11T08:35:27.119216",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.105971",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ash', 'sha']"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "swi = switch('sah')\n",
    "swi"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a6323e19",
   "metadata": {
    "papermill": {
     "duration": 0.004542,
     "end_time": "2025-05-11T08:35:27.127919",
     "exception": false,
     "start_time": "2025-05-11T08:35:27.123377",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 7387063,
     "sourceId": 11766752,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 8.767109,
   "end_time": "2025-05-11T08:35:27.653354",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-11T08:35:18.886245",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
